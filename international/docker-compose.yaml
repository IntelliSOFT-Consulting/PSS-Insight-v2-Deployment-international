version: "3.6"
services:
  core:
    image: "${DHIS2_CORE_IMAGE}"
    container_name: core
    restart: always
    volumes:
      - ${DHIS2_CORE_CONFIG:-./config/DHIS2_home/dhis.conf}:${DHIS2_HOME:-/DHIS2_home}/dhis.conf
      - ./config/DHIS2_home/log4j2.xml:${DHIS2_HOME:-/DHIS2_home}/log4j2.xml
      - ./config/server.xml:/usr/local/tomcat/conf/server.xml
      - home:${DHIS2_HOME:-/DHIS2_home}
    environment:
      DHIS2_HOME: ${DHIS2_HOME:-/DHIS2_home}
      CATALINA_OPTS: "-Dcontext.path='${DHIS2_CORE_CONTEXT_PATH:-}' \
              -Dlog4j2.configurationFile=${DHIS2_HOME:-/DHIS2_home}/log4j2.xml"
    depends_on:
      - "db"
    networks:
      - docker_default

  db:
    image: "ghcr.io/baosystems/postgis:12-3.3"
    container_name: db
    command: "postgres -c max_locks_per_transaction=100"
    restart: always
    volumes:
      - datadb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dhis2
      POSTGRES_USER: dhis
      POSTGRES_PASSWORD: dhis
    networks:
      - docker_default
  gateway:
    image: "jwilder/nginx-proxy:alpine"
    build:
      context: .
      dockerfile: Dockerfile-gateway
    container_name: gateway
    restart: always
    ports:
      - "${DHIS2_CORE_PORT}:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.apps:/data/apps:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - docker_default
  pss_ws_international:
    container_name: "pss_ws_international"
    entrypoint:
      - "java"
      - "-jar"
      - "target/InternationalInstance.jar"
    environment:
      - "PATH=/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "JAVA_HOME=/usr/local/openjdk-11"
      - "LANG=C.UTF-8"
      - "JAVA_VERSION=11.0.16"
    hostname: "9536420637e7"
    image: "intellisoftdev/dhis_pss_international:v3"
    build:
      context: .
      dockerfile: Dockerfile-dhis_pss_international
    ipc: "private"
    logging:
      driver: "json-file"
      options: {}
    mac_address: "02:42:ac:11:00:02"
    network_mode: "bridge"
    ports:
      - "7009:7009/tcp"
    working_dir: "/international_javabackend"
    depends_on:
      - pss_ws_international_db
    networks:
      - docker_default

  pss_ws_international_db:
    command:
      - "postgres"
    container_name: "international_db"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "POSTGRES_DB=international_db"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=en_US.utf8"
      - "PG_MAJOR=14"
      - "PG_VERSION=14.1"
      - "PG_SHA256=4d3c101ea7ae38982f06bdc73758b53727fb6402ecd9382006fa5ecc7c2ca41f"
      - "PGDATA=/var/lib/postgresql/data"
    hostname: "bc34c5438288"
    image: "postgres:14.1-alpine"
    build:
      context: .
      dockerfile: Dockerfile-international_db
    ipc: "private"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    logging:
      driver: "json-file"
      options: {
        max-size: 15m,
        max-file: 5
      }
    networks:
      - "docker_default"
    ports:
      - "5437:5432/tcp"
    restart: "always"
    volumes:
      # - "docker_db:/var/lib/postgresql/data"
      - postgres_data:/var/lib/postgresql/data
      - ./db/int_backup.2023.07.28.sql:/docker-entrypoint-initdb.d/international_db.sql

networks:
  docker_default:
    external: false
    name: docker_default
volumes:
  datadb:
  home:
  postgres_data:
    external: false
